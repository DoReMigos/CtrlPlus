{"version":3,"sources":["axios-services/index.js","components/App.js","index.js"],"names":["getAPIHealth","a","axios","get","data","console","error","healthy","App","useState","APIHealth","setAPIHealth","useEffect","getAPIStatus","className","ReactDOM","render","document","getElementById"],"mappings":"yRAoBO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAEoBC,IAAMC,IAAI,eAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,uCAKHC,QAAQC,MAAR,MALG,kBAMI,CAAEC,SAAS,IANf,0D,gCCYQC,EAzBH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,KAiBhB,OAdAC,qBAAU,YAIU,uCAAG,8BAAAX,EAAA,sEACOD,IADP,gBACXO,EADW,EACXA,QACRI,EAAaJ,EAAU,gBAAkB,kBAFtB,2CAAH,qDAOlBM,KACC,IAGD,yBAAKC,UAAU,iBACb,6CACA,0CAAgBJ,K,MCpBtBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.16e66c44.chunk.js","sourcesContent":["import axios from 'axios';\n\n// this file holds your frontend network request adapters\n// think about each function as a service that provides data\n// to your React UI through AJAX calls\n\n// for example, if we need to display a list of users\n// we'd probably want to define a getUsers service like this:\n\n/* \n  export async function getUsers() {\n    try {\n      const { data: users } = await axios.get('/api/users')\n      return users;\n    } catch(err) {\n      console.error(err)\n    }\n  }\n*/\n\nexport async function getAPIHealth() {\n  try {\n    const { data } = await axios.get('/api/health');\n    return data;\n  } catch (err) {\n    console.error(err);\n    return { healthy: false };\n  }\n}\n","import React, { useState, useEffect } from 'react';\n// getAPIHealth is defined in our axios-services directory index.js\n// you can think of that directory as a collection of api adapters\n// where each adapter fetches specific info from our express server's /api route\nimport { getAPIHealth } from '../axios-services';\nimport '../style/App.css';\n\nconst App = () => {\n  const [APIHealth, setAPIHealth] = useState('');\n\n  useEffect(() => {\n    // follow this pattern inside your useEffect calls:\n    // first, create an async function that will wrap your axios service adapter\n    // invoke the adapter, await the response, and set the data\n    const getAPIStatus = async () => {\n      const { healthy } = await getAPIHealth();\n      setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n    };\n\n    // second, after you've defined your getter above\n    // invoke it immediately after its declaration, inside the useEffect callback\n    getAPIStatus();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Hello, World!</h1>\n      <p>API Status: {APIHealth}</p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\n// css stylesheets can be created for each component\n// place them in the src/style directory, and import them like this:\nimport './style/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}